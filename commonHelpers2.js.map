{"version":3,"file":"commonHelpers2.js","sources":["../src/js/2-snackbar.js"],"sourcesContent":["// Описаний у документації\nimport iziToast from 'izitoast';\n// Додатковий імпорт стилів\nimport 'izitoast/dist/css/iziToast.min.css';\n\nconst inputCountdown = document.querySelector('input[name=\"delay\"]');\nconst radioStateArray = document.querySelectorAll('input[name=\"state\"]');\nconst createPromiseBtn = document.querySelector('button');\ncreatePromiseBtn.disabled = true;\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  iziToast.settings({\n    timeout: 3000,\n    resetOnHover: true,\n    transitionIn: 'flipInX',\n    transitionOut: 'flipOutX',\n    position: 'topRight',\n  });\n});\n\nconst getRadioState = () => {\n  let isRadioSelected;\n  for (const radio of radioStateArray) {\n    if (radio.checked) {\n      if (radio.value == 'fulfilled') {\n        isRadioSelected = true;\n      } else {\n        isRadioSelected = false;\n      }\n      break;\n    }\n  }\n  return isRadioSelected;\n};\n\nconst getDelayInput = () => Number(inputCountdown.value);\n\nconst createPromise = (delay, state) => {\n  return new Promise((resolve, rejected) => {\n    setTimeout(() => {\n      if (state) {\n        resolve();\n      } else {\n        rejected();\n      }\n    }, delay);\n  });\n};\n\nconst createPromiseNotification = event => {\n  let delayValue = getDelayInput();\n  let selectedRadio = getRadioState();\n\n  createPromiseBtn.disabled = false;\n  createPromise(delayValue, selectedRadio)\n    .then(() => {\n      iziToast.success({\n        timeout: 3000,\n        title: 'Success',\n        message: `✅ Fulfilled promise in ${delayValue}ms`,\n      });\n    })\n    .catch(() => {\n      iziToast.error({\n        timeout: 3000,\n        title: 'Error',\n        message: `❌ Rejected promise in ${delayValue}ms`,\n      });\n    });\n  event.preventDefault();\n};\n\nconst checkInputToZero = () => {\n  let delayValue = getDelayInput();\n  if (delayValue <= 0) {\n    createPromiseBtn.disabled = true;\n    iziToast.error({\n      timeout: 4000,\n      title: 'Attention!',\n      message: `Choose delay equal or more than 1ms`,\n    });\n  } else {\n    createPromiseBtn.disabled = false;\n  }\n};\n\ninputCountdown.addEventListener('change', checkInputToZero);\n\ncreatePromiseBtn.addEventListener('click', createPromiseNotification);\n"],"names":["inputCountdown","radioStateArray","createPromiseBtn","iziToast","getRadioState","isRadioSelected","radio","getDelayInput","createPromise","delay","state","resolve","rejected","createPromiseNotification","event","delayValue","selectedRadio","checkInputToZero"],"mappings":"+EAKA,MAAMA,EAAiB,SAAS,cAAc,qBAAqB,EAC7DC,EAAkB,SAAS,iBAAiB,qBAAqB,EACjEC,EAAmB,SAAS,cAAc,QAAQ,EACxDA,EAAiB,SAAW,GAE5B,SAAS,iBAAiB,mBAAoB,IAAM,CAClDC,EAAS,SAAS,CAChB,QAAS,IACT,aAAc,GACd,aAAc,UACd,cAAe,WACf,SAAU,UACd,CAAG,CACH,CAAC,EAED,MAAMC,EAAgB,IAAM,CAC1B,IAAIC,EACJ,UAAWC,KAASL,EAClB,GAAIK,EAAM,QAAS,CACbA,EAAM,OAAS,YACjBD,EAAkB,GAElBA,EAAkB,GAEpB,KACD,CAEH,OAAOA,CACT,EAEME,EAAgB,IAAM,OAAOP,EAAe,KAAK,EAEjDQ,EAAgB,CAACC,EAAOC,IACrB,IAAI,QAAQ,CAACC,EAASC,IAAa,CACxC,WAAW,IAAM,CACXF,EACFC,IAEAC,GAEH,EAAEH,CAAK,CACZ,CAAG,EAGGI,EAA4BC,GAAS,CACzC,IAAIC,EAAaR,IACbS,EAAgBZ,IAEpBF,EAAiB,SAAW,GAC5BM,EAAcO,EAAYC,CAAa,EACpC,KAAK,IAAM,CACVb,EAAS,QAAQ,CACf,QAAS,IACT,MAAO,UACP,QAAS,0BAA0BY,CAAU,IACrD,CAAO,CACP,CAAK,EACA,MAAM,IAAM,CACXZ,EAAS,MAAM,CACb,QAAS,IACT,MAAO,QACP,QAAS,yBAAyBY,CAAU,IACpD,CAAO,CACP,CAAK,EACHD,EAAM,eAAc,CACtB,EAEMG,EAAmB,IAAM,CACZV,KACC,GAChBL,EAAiB,SAAW,GAC5BC,EAAS,MAAM,CACb,QAAS,IACT,MAAO,aACP,QAAS,qCACf,CAAK,GAEDD,EAAiB,SAAW,EAEhC,EAEAF,EAAe,iBAAiB,SAAUiB,CAAgB,EAE1Df,EAAiB,iBAAiB,QAASW,CAAyB"}